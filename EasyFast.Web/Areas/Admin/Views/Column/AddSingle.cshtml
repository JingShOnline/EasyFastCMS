@model EasyFast.Application.Column.Dto.SingleColumnDto
@using Abp.Web.Mvc.Extensions
@{
    ViewBag.CurrentPageName = "ColumnRelatedManager";
}
<div class="portlet box blue ">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-share-alt"></i>@ViewBag.SingleTitle
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse" data-original-title="" title="收缩/展开"></a>
            <a href="#portlet-config" data-toggle="modal" class="config"></a>
            <a href="javascript:;" class="reload" data-original-title="" title="刷新"></a>
        </div>
    </div>
    <div class="portlet-body form">
        <!-- BEGIN FORM-->
        <form id="AddSingle" class="form-horizontal form-bordered form-row-stripped">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ImageUrl)
            <input type="hidden" id="Dir" name="Dir" value="/" />
            <div class="form-body">
                <div class="form-group">
                    <label class="control-label col-md-2">所属栏目</label>
                    <div class="col-md-10" id="treeDiv">

                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">单页名称</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-share-alt"></i>
                            </span>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "请输入单页栏目名称", onblur = "nameBlur()" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">栏目地址</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-share-alt"></i>
                            </span>
                            @Html.EditorFor(model => model.Dir, new { htmlAttributes = new { @class = "form-control", placeholder = "注意，目录名只能是字母、数字、下划线组成" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">顺序Id</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-share-alt"></i>
                            </span>
                            @Html.EditorFor(model => model.OrderId, new { htmlAttributes = new { @class = "form-control", placeholder = "值越小越靠前,默认99" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.OrderId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">指定单页模板</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-file-text-o"></i>
                            </span>
                            @Html.EditorFor(model => model.IndexHtmlRule, new { htmlAttributes = new { @class = "form-control", placeholder = "请输入要生成的Html文件名 例About.shtml 默认为{ColumnDir}/index.html", style = "width:600px;" } }) <strong style="margin-left:5px; line-height:34px;">.shtml</strong>
                                <i class="fa fa-plus"></i>
                                <span><font><font> 添加文件... </font></font></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.IndexTemplate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">是否生成单面节点</label>
                    <div class="col-md-10">
                        @if (Model.IsIndexHtml)
                        {
                            <div class="bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-off bootstrap-switch-animate" style="width: 78px;">
                                <div class="bootstrap-switch-container" style="width: 114px; margin-left: 0px;">
                                    <input id="isIndexHtml" type="checkbox" class="make-switch" checked="" data-on-text="<i class='fa fa-check'></i>" data-off-text="<i class='fa fa-times'></i>">
                                </div>
                            </div>
                        }
                        else
                        {
                            <div id="isIndexHtml" class="bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-on bootstrap-switch-animate" style="width: 78px;">
                                <div class="bootstrap-switch-container" style="width: 114px; margin-left: 0px;">
                                    <input id="isIndexHtml" type="checkbox" class="make-switch" data-on-text="<i class='fa fa-check'></i>" data-off-text="<i class='fa fa-times'></i>">
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">生成HTML规则</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-file-code-o"></i>
                            </span>
                            @Html.EditorFor(model => model.IndexHtmlRule, new { htmlAttributes = new { @class = "form-control", placeholder = "请输入要生成的Html文件名 例About.html", style = "width:400px;" } }) <strong style="margin-left:5px; line-height:34px;">.html</strong>
                        </div>
                        @Html.ValidationMessageFor(model => model.IndexHtmlRule, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">单页图片地址</label>
                    <div class="col-md-10">
                        <div id="columnPic">
                            <div id="fileList" class="uploader-list">
                                <img src="@Model.ImageUrl" />
                            </div>
                            <div id="filePicker">选择图片</div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">单页提示信息</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-folder-o"></i>
                            </span>
                            @Html.EditorFor(model => model.Tooltip, new { htmlAttributes = new { @class = "form-control", placeholder = "鼠标移至单页名称上时将显示设定的提示文字" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Tooltip, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">搜索引擎关键字</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-folder-o"></i>
                            </span>
                            @Html.EditorFor(model => model.Keywords, new { htmlAttributes = new { @class = "form-control", placeholder = "搜索引擎关键字" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">搜索引擎描述</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-folder-o"></i>
                            </span>
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "5", placeholder = "搜索引擎描述" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group last">
                    <label class="control-label col-md-2">单页简介</label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-folder-o"></i>
                            </span>
                            @Html.TextAreaFor(model => model.Info, new { @class = "form-control", rows = "20", placeholder = "单页简介，支持Html。" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-actions">
                <div class="row">
                    <div class="col-md-offset-2 col-md-9">
                        <button id="submit" type="button" class="btn blue">
                            <i class="fa fa-check"></i>提交
                        </button>
                        <button type="button" onclick="location.href='Index'" class="btn default">
                            <i class="fa fa-reply"></i>返回
                        </button>
                    </div>
                </div>
            </div>
        </form>
        <!-- END FORM-->
    </div>
</div>
@Html.IncludeScript("/Areas/Admin/Views/Column/uploadImg.js")
@section Scripts {
    <script>
        var selectedColumn = '@Model.ParentId';
        var curentId = '@Model.Id';
        (function() {
            $(function() {

                abp.ajax({
                    url: "@Url.Action("GetTreeColumnName", "Column")"
                }).done(function(data) {
                    var html = setTreeColumnSelect(data,
                        "<select Name='ParentId' class='form-control col-md-1' required:true'><option value=''>请选择栏目</option>");
                    html += "</select>";
                    var select = $("#treeDiv").html(html);
                });


            });
        })();

        $("#submit").click(function() {

            var $form = $("#AddSingle");

            if (!$form.valid()) {
                return;
            }
            var $div = $form.parent();
            var json = $form.serializeFormToObject();
            json.IsIndexHtml = $("#isIndexHtml").bootstrapSwitch('state');
            abp.ui.setBusy($div);
            abp.ajax({
                url: '@Url.Action("AddOrUpdateSingle", "Column")',
                data: JSON.stringify(json)
            }).always(function() {
                abp.ui.clearBusy($div);
            });
        });


        //设置tree下拉框
        function setTreeColumnSelect(list, str) {
            for (var i = 0; i < list.length; i++) {

                if (list[i].id != curentId) {
                    if (list[i].id == selectedColumn) {
                        str += "<option value=" + list[i].id + " dir=" + list[i].dir + " selected>" + list[i].name + "</option>"
                    } else {
                        str += "<option value=" + list[i].id + " dir=" + list[i].dir + ">" + list[i].name + "</option>"
                    }
                }

                str = setTreeColumnSelect(list[i].children, str);
            }
            return str;

        }

        function nameBlur() {

            var name = $("input[name=Name]").val();
            if (name) {
                var dir = $("select[name='ParentId'] option:selected").attr("dir");
                if (dir) {
                    $("input[name=Dir]").val(dir + "\\" + $("input[name=Name]").val() + "\\");
                } else {
                    $("input[name=Dir]").val($("input[name=Name]").val() + "\\");
                }

            }

        }
    </script>
}
